#THEORY beaucage
        general expression allowing the description of the small angle scattering
        of a hierarchically structured fractal system
#CITE
        G. Beaucage, J. Appl. Cryst. (1996) 29, 134-146
#PARAMETERS
        ampli            ! prefactor 
        g1               ! gaussian(1) amplitude
        rg1              ! radius of gyration of first contribution (Gaussian)
        b1               ! power law component amplitiude of first contribution
        pow1             ! exponent of first power law contribution
        g2               ! gaussian(2) amplitude
        rg2              ! radius of gyration of 2nd  contribution (Gaussian)
        b2               ! power law component amplitiude of 2nd  contribution
        pow2             ! exponent of 2nd  power law contribution
        g3               ! gaussian(3) amplitude
        rg3              ! radius of gyration of 3rd contribution (Gaussian)
        b3               ! power law component amplitiude of 3rd contribution
        pow3             ! exponent of 3rd power law contribution
        g4               ! gaussian(4) amplitude
        rg4              ! radius of gyration of 4th contribution (Gaussian)
        b4               ! power law component amplitiude of 4th contribution
        pow4             ! exponent of 4th power law contribution
        g5               ! gaussian(5) amplitude
        rg5              ! radius of gyration of 5th contribution (Gaussian)
        b5               ! power law component amplitiude of 5th contribution
        pow5             ! exponent of 5th power law contribution
#RECIN-PARAMETERS    (allow 8 chars for name, start only beyond 8 with default)
        thick    0.1     ! Dicke der Probe
#RECOUT-PARAMETERS
#VARIABLES
     integer, parameter :: maxcomp=5
     double precision   :: q
     double precision   :: g(maxcomp), rg(maxcomp), b(maxcomp), pow(maxcomp)
#IMPLEMENTATION
     q   = x
#SUBROUTINES
  function bc_sum(q,g,rg,b,pow,maxcomp)
    implicit none
    double precision, intent(in) :: q    
    double precision, intent(in) :: g  (maxcomp)    
    double precision, intent(in) :: rg (maxcomp)    
    double precision, intent(in) :: b  (maxcomp)    
    double precision, intent(in) :: pow(maxcomp)    
    integer         , intent(in) :: maxcomp
!! HIER IMPLEMENTATION

  end function bc_sum
#END
